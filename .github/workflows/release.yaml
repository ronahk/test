name: release

on:
  push:
    branches:
      - main

jobs:
  pre_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get plugin version
        id: get_plugin_version
        run: |
          echo "PLUGIN_VERSION=$(cat plugin.yaml | grep "version" | cut -d '"' -f 2)" >> $GITHUB_OUTPUT
          echo "PLUGIN_VERSION=$(cat plugin.yaml | grep "version" | cut -d '"' -f 2)" >> $GITHUB_ENV
      - name: Get tag name
        id: get_tag_name
        run: |
          echo "TAG_NAME=$(echo ${{ github.ref_name }} | cut -d 'v' -f2)" >> $GITHUB_OUTPUT
          echo "TAG_NAME=$(echo ${{ github.ref_name }} | cut -d 'v' -f2)" >> $GITHUB_ENV
    outputs:
      plugin_version: ${{ steps.get_plugin_version.outputs.PLUGIN_VERSION }}
      release_tag: ${{ steps.get_tag_name.outputs.TAG_NAME }}

  helm_release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Bump Versions
        run: |
          sed -i -e "s/appVersion.*/appVersion: ${{ needs.pre_release.outputs.release_tag }}/g" chart/Chart.yaml
          CURRENT_VERSION=$(cat chart/Chart.yaml | grep 'version:' | awk '{print \$2}')
          NEW_VERSION=$(echo $$CURRENT_VERSION | awk -F. '{\$NF = \$NF + 1;} 1' | sed 's/ /./g')
          sed -i -e "s/$$CURRENT_VERSION/$$NEW_VERSION/g" chart/Chart.yaml

      - name: Test
        run: cat chart/Chart.yaml
